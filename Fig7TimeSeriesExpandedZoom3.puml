@startuml
'https://plantuml.com/state-diagram

'scale 350 width

'skinparam state {
'  FontSize 12
'  FontColor blue
'}

skinparam state {
  backgroundColor Gold
}

state "Time Series" as TimeSeries {
  state "..." as more

  state "**GeneratingForecasts**" as GeneratingForecasts

  GeneratingForecasts : entry / predictor\n\
entry / "https://autogluon.s3.amazonaws.com/datasets/timeseries/m4_hourly_subset/test.csv"\n\
exit / predictor\n\
exit / test_data\n\
====\n\
[[https://colab.research.google.com/github/autogluon/autogluon/blob/master/docs/tutorials/timeseries/forecasting-quick-start.ipynb#scrollTo=4a238183&line=1&uniqifier=1 Colab]]\n\
====\n\
predictions = predictor.predict(train_data)\n\
predictions.head()\n\
----\n\
import matplotlib.pyplot as plt\n\
\n\
~# TimeSeriesDataFrame can also be loaded directly from a file\n\
test_data = TimeSeriesDataFrame.from_path("https://autogluon.s3.amazonaws.com/datasets/timeseries/m4_hourly_subset/test.csv")\n\
\n\
plt.figure(figsize=(20, 3))\n\
\n\
item_id = "H1"\n\
y_past = train_data.loc[item_id]["target"]\n\
y_pred = predictions.loc[item_id]\n\
y_test = test_data.loc[item_id]["target"][-48:]\n\
\n\
plt.plot(y_past[-200:], label="Past time series values")\n\
plt.plot(y_pred["mean"], label="Mean forecast")\n\
plt.plot(y_test, label="Future time series values")\n\
\n\
plt.fill_between(\n\
    y_pred.index, y_pred["0.1"], y_pred["0.9"], color="red", alpha=0.1, label=f"10%-90% confidence interval"\n\
)\n\
plt.legend();


  state "..." as more1

  [*] -> more
  'more -> TrainingTimeSeries
  more -> GeneratingForecasts
  GeneratingForecasts -> more1
  more1 -> [*]
}

'center footer Generated by Plant2ML www.plant2ml.com

@enduml